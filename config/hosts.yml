# DCRP Host Configuration
# Define remote hosts for SSH-based Docker monitoring
# Format matches snadboy-ssh-docker library expectations

defaults:
  user: revp
  port: 22
  key_file: /app/ssh-keys/docker_monitor_key
  enabled: true

hosts:
  # Localhost via SSH (same process as any remote host)
  localhost:
    hostname: "localhost"
    user: "revp"
    port: 22
    key_file: "/app/ssh-keys/docker_monitor_key"
    description: "Local Docker host via SSH"
    enabled: true
    
  # Example remote host via SSH
  # remote-server-1:
  #   enabled: false
  #   type: ssh
  #   hostname: "192.168.1.100"
  #   port: 22
  #   username: "docker-user"
  #   ssh_key: "/app/ssh-keys/remote-server-1"
  #   docker_host: "unix:///var/run/docker.sock"
  #   description: "Remote Docker host #1"
  #   labels:
  #     environment: "production"
  #     location: "datacenter-1"
  
  # Example remote host with custom Docker port
  # remote-server-2:
  #   enabled: false
  #   type: ssh
  #   hostname: "docker-host-2.internal"
  #   port: 2222
  #   username: "monitor"
  #   ssh_key: "/app/ssh-keys/remote-server-2"
  #   docker_host: "tcp://localhost:2376"
  #   docker_tls_verify: true
  #   docker_cert_path: "/app/certs/remote-server-2"
  #   description: "Remote Docker host #2 with TLS"
  #   labels:
  #     environment: "staging"
  #     location: "cloud-provider"

# Global SSH configuration
ssh_config:
  # Connection timeout (seconds)
  timeout: 30
  
  # Connection retries
  retries: 3
  
  # Keep alive interval (seconds)
  keepalive: 60
  
  # SSH options
  options:
    StrictHostKeyChecking: "no"
    UserKnownHostsFile: "/dev/null"
    ServerAliveInterval: "60"
    ServerAliveCountMax: "3"

# Container discovery rules
discovery:
  # Label-based discovery
  labels:
    # Look for containers with these labels
    enable_label: "dcrp.enable"
    host_label: "dcrp.host" 
    port_label: "dcrp.port"
    ssl_label: "dcrp.ssl"
    websocket_label: "dcrp.websocket"
    
    # Optional labels
    path_label: "dcrp.path"
    auth_label: "dcrp.auth"
    middleware_label: "dcrp.middleware"
  
  # Network discovery
  networks:
    # Scan these Docker networks for services
    - "dcrp-network"
    # - "web"
    # - "traefik"
  
  # Port scanning (for containers without labels)
  port_scan:
    enabled: false
    common_ports: [80, 443, 3000, 8000, 8080, 9000]
    
# Monitoring configuration
monitoring:
  # Event monitoring
  events:
    - "start"
    - "stop" 
    - "restart"
    - "pause"
    - "unpause"
    - "die"
  
  # Health check interval (seconds)
  health_check_interval: 60
  
  # Cleanup interval (seconds) 
  cleanup_interval: 300
  
  # Retry configuration
  retry:
    max_attempts: 3
    backoff_factor: 2
    max_delay: 300